
template <typename Iterator, typename T>
auto find_two_elements_with_sum(Iterator first, Iterator last, T c)
->std::pair<bool, std::pair<Iterator, Iterator>>
{
	std::pair<bool, std::pair<Iterator, Iterator>> sumit;
	sumit.first = false;
	sumit.second.first = nullptr;
	sumit.second.second = nullptr;
	while (*last>*first)
	{
		T sum = *first + *last;

		if (sum > c)  last--;
		else if (sum < c) first++;
		else
		{
			sumit.first = true;
			sumit.second.first = first;
			sumit.second.second = last;
			return sumit;
		}
	}
	return sumit;
}
